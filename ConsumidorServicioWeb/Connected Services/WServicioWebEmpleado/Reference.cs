//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumidorServicioWeb.WServicioWebEmpleado {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WServicioWebEmpleado.wsEmpleadoSoap")]
    public interface wsEmpleadoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_empleados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listado_empleados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_empleados", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listado_empleadosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/datos_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet datos_empleado(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/datos_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> datos_empleadoAsync(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_empleado(string nombre, string puesto, int telefono, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_empleadoAsync(string nombre, string puesto, int telefono, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_empleado(int idEmpleado, string nombre, string puesto, int telefono, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_empleadoAsync(int idEmpleado, string nombre, string puesto, int telefono, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_empleado(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_empleadoAsync(int idEmpleado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsEmpleadoSoapChannel : ConsumidorServicioWeb.WServicioWebEmpleado.wsEmpleadoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsEmpleadoSoapClient : System.ServiceModel.ClientBase<ConsumidorServicioWeb.WServicioWebEmpleado.wsEmpleadoSoap>, ConsumidorServicioWeb.WServicioWebEmpleado.wsEmpleadoSoap {
        
        public wsEmpleadoSoapClient() {
        }
        
        public wsEmpleadoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsEmpleadoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsEmpleadoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsEmpleadoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listado_empleados() {
            return base.Channel.listado_empleados();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listado_empleadosAsync() {
            return base.Channel.listado_empleadosAsync();
        }
        
        public System.Data.DataSet datos_empleado(int idEmpleado) {
            return base.Channel.datos_empleado(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> datos_empleadoAsync(int idEmpleado) {
            return base.Channel.datos_empleadoAsync(idEmpleado);
        }
        
        public int insertar_empleado(string nombre, string puesto, int telefono, string email) {
            return base.Channel.insertar_empleado(nombre, puesto, telefono, email);
        }
        
        public System.Threading.Tasks.Task<int> insertar_empleadoAsync(string nombre, string puesto, int telefono, string email) {
            return base.Channel.insertar_empleadoAsync(nombre, puesto, telefono, email);
        }
        
        public int actualizar_empleado(int idEmpleado, string nombre, string puesto, int telefono, string email) {
            return base.Channel.actualizar_empleado(idEmpleado, nombre, puesto, telefono, email);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_empleadoAsync(int idEmpleado, string nombre, string puesto, int telefono, string email) {
            return base.Channel.actualizar_empleadoAsync(idEmpleado, nombre, puesto, telefono, email);
        }
        
        public int eliminar_empleado(int idEmpleado) {
            return base.Channel.eliminar_empleado(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_empleadoAsync(int idEmpleado) {
            return base.Channel.eliminar_empleadoAsync(idEmpleado);
        }
    }
}
